/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.9/userguide/building_java_projects.html in the Gradle documentation.
 */


plugins {
    id 'java'
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    //fatjar
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}


// ext {
//     guiceVersion = "7.0.0"
//     jettyVersion = "11.0.21"
//     jerseyVersion = "3.1.7"
//     jacksonVersion = "2.17.2" // same version as jersey-media-json-jackson dependency
//     protobufVersion = "4.27.2"
//     jxlsVersion = "2.14.0" // version 3 has breaking changes
//     junitVersion = "5.10.3"
// }

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}


dependencies {
        // Use JUnit test framework.
    testImplementation libs.junit
    // implementation "org.slf4j:slf4j-jdk14:2.0.13"

    implementation 'org.slf4j:slf4j-api:2.0.13'
    implementation 'org.slf4j:slf4j-simple:2.0.13'
    
    // implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    // implementation group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.25'


    // This dependency is used by the application.
    implementation libs.guava
    implementation 'com.google.inject:guice:5.0.1'

    implementation 'org.glassfish.jersey.core:jersey-server:3.0.3'
    implementation 'org.glassfish.jersey.containers:jersey-container-servlet:3.0.3'
    implementation 'org.glassfish.jersey.media:jersey-media-json-jackson:3.0.3'
    // implementation 'org.glassfish.jersey.media:jersey-media-json-jackson:2.44'
    // implementation 'org.glassfish.jersey.ext:jersey-entity-filtering:2.44'
    // implementation 'com.fasterxml.jackson.core:jackson-annotations:2.17.1'
    // implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.1'
    // implementation 'com.fasterxml.jackson.module:jackson-module-jaxb-annotations:2.17.1'

    

    implementation "org.glassfish.jersey.inject:jersey-hk2:3.0.3"

    implementation 'org.eclipse.jetty:jetty-server:11.0.15'
    implementation 'org.eclipse.jetty:jetty-servlet:11.0.15'
    implementation 'org.eclipse.jetty:jetty-servlets:11.0.15'
    implementation 'jakarta.ws.rs:jakarta.ws.rs-api:3.1.0' // Ensure this version is correct
    implementation 'com.fasterxml.jackson.jakarta.rs:jackson-jakarta-rs-json-provider:2.14.1' 
    // implementation 'com.fasterxml.jackson.jakarta.rsjackson-jakarta-rs-json-provider:2.13' 
    // implementation 'com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.12.3' 
    // implementation 'com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.12.3' 
    // implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.3' 
    // implementation 'com.fasterxml.jackson.jaxrs:jackson-jaxrs-json:2.12.6' 

    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    // implementation 'org.slf4j:slf4j-api:2.0.13'
    // implementation 'org.slf4j:slf4j-simple:2.0.13'
}

// dependencies {
//     implementation 'com.google.inject:guice:5.0.1'
//     implementation "org.glassfish.jersey.containers:jersey-container-servlet:$jerseyVersion"
//     implementation "org.glassfish.jersey.core:jersey-server:$jerseyVersion"
//     implementation "org.glassfish.jersey.inject:jersey-hk2:$jerseyVersion"
//     implementation "org.eclipse.jetty:jetty-server:$jettyVersion"
//     implementation "org.eclipse.jetty:jetty-servlet:$jettyVersion"
//     implementation "org.eclipse.jetty:jetty-servlets:$jettyVersion"
//     implementation "org.slf4j:slf4j-jdk14:2.0.13"
//     // json related
//     implementation 'org.glassfish.jersey.media:jersey-media-json-jackson:2.35'
//     implementation 'jakarta.ws.rs:jakarta.ws.rs-api:3.1.0' // Added JAX-RS API dependency
    

    

//     // Use JUnit test framework.
//     testImplementation libs.junit

//     // This dependency is used by the application.
//     implementation libs.guava
// }

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'org.example.App'
}


// tasks.register('copyDependencies', Copy) {
//     into "$projectDir/target/lib"
//     from configurations.runtimeClasspath
// }
// assemble.dependsOn(copyDependencies)

// jar {
//     manifest {
//         attributes(
//                 "Main-Class": "org.example.App",
//                 "Implementation-Version": "6.3",
//                 "Class-Path": configurations.runtimeClasspath.files.collect { "lib/$it.name" }.join(" "))
//     }
// }
compileJava.options.encoding = "UTF-8"
jar.destinationDirectory = file("$projectDir/target")

tasks.register('copyDependencies', Copy) {
    into "$projectDir/target/lib"
    from configurations.runtimeClasspath
}
assemble.dependsOn(copyDependencies)

jar {
    manifest {
        attributes(
                'Main-Class': 'org.example.App'
        )
    }
}